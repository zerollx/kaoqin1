<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- 扫描注解-->
    <context:component-scan base-package="com.jc"/>
    <!--加载配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!--注解扫描-->
    <!--<context:component-scan base-package="com.jc"/>-->
    <!--开启aop自动代理-->
    <!--<aop:aspectj-autoproxy />-->

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!--<property name="driverClass" value="${jdbc.driver}"/>-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--将sqlSessionFactory 交给spring管理-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
         <!--工厂需要两个 属性-->
        <property name="dataSource" ref="dataSource" />
        <!--引入映射文件的位置-->
        <property name="mapperLocations" value="classpath*:*Mapper.xml" />
    </bean>


<!--动态生成的Mapper进行管理-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--传入工厂-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描包哪些包下的接口-->
        <property name="basePackage" value="com.jc.mapper"/>
    </bean>
<!--sqlSession  -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!--<tx:advice></tx:advice>-->
    <!--<aop-->

</beans>