<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">


    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring-config.xml</param-value>
    </context-param>
    <!-- 配置spring 监听器，加载spring-config.xml配置文件 -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
    </listener>


    <!--前端配置器-->
    <servlet>
        <servlet-name>springmvc</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>

        <!--contextConfigLocation：指定springmvc配置的加载位置，
          如果不指定则默认加 载WEB-INF/***-servlet.xml(例如springmvc-servlet.xml)。
        -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:springmvc-config.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>springmvc</servlet-name>
        <!-- 可以拦截二种请求
         第一种：拦截固定后缀的url，比如设置为 *.do、*.action，
                 例如：/user/add.action 此方法最简单,不会导致静态资源（jpg,js,css）被拦截
         第二种：拦截所有 设置为/
                 例如：/user/add /user/add.action此方法可以实现REST风格的url
                 很多互联网类型的应用使用这种方式.
                 但是此方法会导致静态文件(jpg,js,css)被拦截后不能正常显示.需要特殊处理

           错误设置：拦截所有,设置为/*，此设置方法错误,因为请求到Action,
                    当action转到jsp时再次被拦截,提示不能根据jsp路径mapping成功.
        -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>



    <!-- 统一编码 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <!--初始化强制编码-->
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>